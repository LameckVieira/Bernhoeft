// <auto-generated />
using System;
using BernhoeftApi.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BernhoeftApi.Migrations
{
    [DbContext(typeof(BernhoeftContext))]
    partial class BernhoeftContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BernhoeftApi.Domains.Categoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCategoria");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoria"), 1L, 1);

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuarioNavigationIdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("nome");

                    b.Property<int?>("ProdutoIdProduto")
                        .HasColumnType("int");

                    b.Property<bool>("Situacao")
                        .HasColumnType("bit")
                        .HasColumnName("situacao");

                    b.HasKey("IdCategoria")
                        .HasName("PK__Categori__8A3D240C1D055149");

                    b.HasIndex("IdUsuarioNavigationIdUsuario");

                    b.HasIndex("ProdutoIdProduto");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("BernhoeftApi.Domains.Produto", b =>
                {
                    b.Property<int>("IdProduto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idProduto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProduto"), 1L, 1);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("descricao");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("IdCategoriaNavigationIdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuarioNavigationIdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("nome");

                    b.Property<double>("Preco")
                        .HasColumnType("float")
                        .HasColumnName("preco");

                    b.Property<bool>("Situacao")
                        .HasColumnType("bit")
                        .HasColumnName("situacao");

                    b.HasKey("IdProduto")
                        .HasName("PK__Produtos__5EEDF7C3597F0F45");

                    b.HasIndex("IdCategoriaNavigationIdCategoria");

                    b.HasIndex("IdUsuarioNavigationIdUsuario");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("BernhoeftApi.Domains.TipoUsuario", b =>
                {
                    b.Property<int>("IdTipoUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idTipoUsuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoUsuario"), 1L, 1);

                    b.Property<string>("TipoUsusario")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("tipoUsusario");

                    b.HasKey("IdTipoUsuario")
                        .HasName("PK__TipoUsua__03006BFF9F10B88B");

                    b.ToTable("TipoUsuario", (string)null);
                });

            modelBuilder.Entity("BernhoeftApi.Domains.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("email");

                    b.Property<int>("IdTipoUsuario")
                        .HasColumnType("int")
                        .HasColumnName("idTipoUsuario");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("nome");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("senha");

                    b.HasKey("IdUsuario")
                        .HasName("PK__Usuario__645723A63FAD6D07");

                    b.HasIndex("IdTipoUsuario");

                    b.HasIndex(new[] { "Email" }, "UQ__Usuario__AB6E61647E77A90A")
                        .IsUnique();

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("BernhoeftApi.Domains.Categoria", b =>
                {
                    b.HasOne("BernhoeftApi.Domains.Usuario", "IdUsuarioNavigation")
                        .WithMany()
                        .HasForeignKey("IdUsuarioNavigationIdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BernhoeftApi.Domains.Produto", null)
                        .WithMany("Categoria")
                        .HasForeignKey("ProdutoIdProduto");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("BernhoeftApi.Domains.Produto", b =>
                {
                    b.HasOne("BernhoeftApi.Domains.Categoria", "IdCategoriaNavigation")
                        .WithMany()
                        .HasForeignKey("IdCategoriaNavigationIdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BernhoeftApi.Domains.Usuario", "IdUsuarioNavigation")
                        .WithMany()
                        .HasForeignKey("IdUsuarioNavigationIdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdCategoriaNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("BernhoeftApi.Domains.Usuario", b =>
                {
                    b.HasOne("BernhoeftApi.Domains.TipoUsuario", "IdTipoUsuarioNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdTipoUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Usuario__idTipoU__5165187F");

                    b.Navigation("IdTipoUsuarioNavigation");
                });

            modelBuilder.Entity("BernhoeftApi.Domains.Produto", b =>
                {
                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("BernhoeftApi.Domains.TipoUsuario", b =>
                {
                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
